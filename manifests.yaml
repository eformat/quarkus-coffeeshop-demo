---
apiVersion: v1
items:
-  apiVersion: image.openshift.io/v1
   kind: ImageStream
   metadata:
     name: ubi
     namespace: quarkus-coffee
   spec:
     lookupPolicy:
       local: false
     tags:
     - annotations:
         openshift.io/imported-from: registry.access.redhat.com/ubi8/ubi:8.0
       from:
         kind: DockerImage
         name: registry.access.redhat.com/ubi8/ubi:8.0
       importPolicy: {}
       name: "8.0"
       referencePolicy:
         type: Source
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    labels:
      build: barista-http
    name: barista-http
  spec:
    lookupPolicy:
      local: false
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    labels:
      build: barista-kafka-julie
    name: barista-kafka-julie
  spec:
    lookupPolicy:
      local: false
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    labels:
      build: barista-kafka-tom
    name: barista-kafka-tom
  spec:
    lookupPolicy:
      local: false
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    labels:
      build: coffeeshop-service
    name: coffeeshop-service
  spec:
    lookupPolicy:
      local: false
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
---
apiVersion: v1
items:
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: barista-http
    name: barista-http
  spec:
    replicas: 1
    selector:
      app: barista-http
      deploymentconfig: barista-http
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: barista-http
          deploymentconfig: barista-http
      spec:
        containers:
        - image: barista-http:latest
          imagePullPolicy: Always
          name: barista-http
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - barista-http
        from:
          kind: ImageStreamTag
          name: barista-http:latest
      type: ImageChange
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: barista-kafka-julie
    name: barista-kafka-julie
  spec:
    replicas: 1
    selector:
      app: barista-kafka-julie
      deploymentconfig: barista-kafka-julie
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: barista-kafka-julie
          deploymentconfig: barista-kafka-julie
      spec:
        containers:
        - image: barista-kafka-julie:latest
          imagePullPolicy: Always
          name: barista-kafka-julie
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - barista-kafka-julie
        from:
          kind: ImageStreamTag
          name: barista-kafka-julie:latest
      type: ImageChange
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: barista-kafka-tom
    name: barista-kafka-tom
  spec:
    replicas: 1
    selector:
      app: barista-kafka-tom
      deploymentconfig: barista-kafka-tom
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: barista-kafka-tom
          deploymentconfig: barista-kafka-tom
      spec:
        containers:
        - image: barista-kafka-tom:latest
          imagePullPolicy: Always
          name: barista-kafka-tom
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - barista-kafka-tom
        from:
          kind: ImageStreamTag
          name: barista-kafka-tom:latest
      type: ImageChange
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: coffeeshop-service
    name: coffeeshop-service
  spec:
    replicas: 1
    selector:
      app: coffeeshop-service
      deploymentconfig: coffeeshop-service
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: coffeeshop-service
          deploymentconfig: coffeeshop-service
      spec:
        containers:
        - image: coffeeshop-service:latest
          imagePullPolicy: Always
          name: coffeeshop-service
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - coffeeshop-service
        from:
          kind: ImageStreamTag
          name: coffeeshop-service:latest
      type: ImageChange
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
---
apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: barista-http
    name: barista-http
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: barista-http
      deploymentconfig: barista-http
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: barista-kafka-julie
    name: barista-kafka-julie
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: barista-kafka-julie
      deploymentconfig: barista-kafka-julie
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: barista-kafka-tom
    name: barista-kafka-tom
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: barista-kafka-tom
      deploymentconfig: barista-kafka-tom
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: coffeeshop-service
    name: coffeeshop-service
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: coffeeshop-service
      deploymentconfig: coffeeshop-service
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
---
apiVersion: v1
items:
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      app: barista-http
    name: barista-http
  spec:
    port:
      targetPort: 8080-tcp
    subdomain: ""
    to:
      kind: Service
      name: barista-http
      weight: 100
    wildcardPolicy: None
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      app: barista-kafka-julie
    name: barista-kafka-julie
  spec:
    port:
      targetPort: 8080-tcp
    subdomain: ""
    to:
      kind: Service
      name: barista-kafka-julie
      weight: 100
    wildcardPolicy: None
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      app: barista-kafka-tom
    name: barista-kafka-tom
  spec:
    port:
      targetPort: 8080-tcp
    subdomain: ""
    to:
      kind: Service
      name: barista-kafka-tom
      weight: 100
    wildcardPolicy: None
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      app: coffeeshop-service
    name: coffeeshop-service
  spec:
    port:
      targetPort: 8080-tcp
    subdomain: ""
    to:
      kind: Service
      name: coffeeshop-service
      weight: 100
    wildcardPolicy: None
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
---
apiVersion: v1
items:
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    labels:
      build: barista-http
    name: barista-http
  spec:
    failedBuildsHistoryLimit: 5
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: barista-http:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      dockerfile: |-
        FROM registry.access.redhat.com/ubi8/ubi:8.0
        COPY application-barista-http /application
        EXPOSE 8080
        CMD ./application -Xmx10m -Xms10m -Xmn10m -XX:+PrintGC -XX:+VerboseGC -XX:+PrintGCTimeStamps +XX:+PrintHeapShape -Dquarkus.http.host=0.0.0.0 -Dquarkus.http.port=8080
      images:
      - as: null
        from:
          kind: ImageStreamTag
          name: quarkus-coffeeshop-demo:latest
          namespace: quarkus-coffee
        paths:
        - destinationDir: .
          sourcePath: /home/quarkus/application-barista-http
      type: Dockerfile
    strategy:
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: ubi:8.0
      type: Docker
    successfulBuildsHistoryLimit: 5            
    triggers:
    - imageChange:
        from:
          kind: ImageStreamTag
          name: quarkus-coffeeshop-demo:latest          
      type: ImageChange
    - type: ConfigChange
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    labels:
      build: barista-kafka-julie
    name: barista-kafka-julie
  spec:
    failedBuildsHistoryLimit: 5
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: barista-kafka-julie:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      dockerfile: |-
        FROM registry.access.redhat.com/ubi8/ubi:8.0
        COPY application-barista-kafka /application
        EXPOSE 8080
        CMD ./application -Xmx10m -Xms10m -Xmn10m -XX:+PrintGC -XX:+VerboseGC -XX:+PrintGCTimeStamps +XX:+PrintHeapShape -Dbarista.name=julie -Dmp.messaging.incoming.orders.client.id=julie -Dmp.messaging.incoming.orders.bootstrap.servers=my-cluster-kafka-bootstrap.strimzi.svc:9092 -Dmp.messaging.outgoing.queue.bootstrap.servers=my-cluster-kafka-bootstrap.strimzi.svc:9092
      images:
      - as: null
        from:
          kind: ImageStreamTag
          name: quarkus-coffeeshop-demo:latest
          namespace: quarkus-coffee
        paths:
        - destinationDir: .
          sourcePath: /home/quarkus/application-barista-kafka
      type: Dockerfile
    strategy:
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: ubi:8.0
      type: Docker
    successfulBuildsHistoryLimit: 5            
    triggers:
    - imageChange:
        from:
          kind: ImageStreamTag
          name: quarkus-coffeeshop-demo:latest
      type: ImageChange
    - type: ConfigChange
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    labels:
      build: barista-kafka-tom
    name: barista-kafka-tom
  spec:
    failedBuildsHistoryLimit: 5
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: barista-kafka-tom:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      dockerfile: |-
        FROM registry.access.redhat.com/ubi8/ubi:8.0
        COPY application-barista-kafka /application
        EXPOSE 8080
        CMD ./application -Xmx10m -Xms10m -Xmn10m -XX:+PrintGC -XX:+VerboseGC -XX:+PrintGCTimeStamps +XX:+PrintHeapShape -Dbarista.name=tom -Dmp.messaging.incoming.orders.client.id=tom -Dmp.messaging.incoming.orders.bootstrap.servers=my-cluster-kafka-bootstrap.strimzi.svc:9092 -Dmp.messaging.outgoing.queue.bootstrap.servers=my-cluster-kafka-bootstrap.strimzi.svc:9092
      images:
      - as: null
        from:
          kind: ImageStreamTag
          name: quarkus-coffeeshop-demo:latest
          namespace: quarkus-coffee
        paths:
        - destinationDir: .
          sourcePath: /home/quarkus/application-barista-kafka
      type: Dockerfile
    strategy:
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: ubi:8.0
      type: Docker
    successfulBuildsHistoryLimit: 5
    triggers:
    - imageChange:
        from:
          kind: ImageStreamTag
          name: quarkus-coffeeshop-demo:latest          
      type: ImageChange
    - type: ConfigChange
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    labels:
      build: coffeeshop-service
    name: coffeeshop-service
  spec:
    failedBuildsHistoryLimit: 5
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: coffeeshop-service:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      dockerfile: |-
        FROM registry.access.redhat.com/ubi8/ubi:8.0
        COPY application-coffeeshop-service /application
        EXPOSE 8080
        CMD ./application -Xmx10m -Xms10m -Xmn10m -XX:+PrintGC -XX:+VerboseGC -XX:+PrintGCTimeStamps +XX:+PrintHeapShape -Dquarkus.http.host=0.0.0.0 -Dme.escoffier.quarkus.coffeeshop.http.BaristaService/mp-rest/url=http://barista-http:8080 -Dmp.messaging.outgoing.orders.bootstrap.servers=my-cluster-kafka-bootstrap.strimzi.svc:9092 -Dmp.messaging.incoming.beverages.bootstrap.servers=my-cluster-kafka-bootstrap.strimzi.svc:9092 -Dmp.messaging.outgoing.queue.bootstrap.servers=my-cluster-kafka-bootstrap.strimzi.svc:9092
      images:
      - as: null
        from:
          kind: ImageStreamTag
          name: quarkus-coffeeshop-demo:latest
          namespace: quarkus-coffee
        paths:
        - destinationDir: .
          sourcePath: /home/quarkus/application-coffeeshop-service
      type: Dockerfile
    strategy:
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: ubi:8.0
      type: Docker
    successfulBuildsHistoryLimit: 5
    triggers:
    - imageChange:
        from:
          kind: ImageStreamTag
          name: quarkus-coffeeshop-demo:latest
      type: ImageChange
    - type: ConfigChange
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
---